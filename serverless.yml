service: sls-ts-setup
frameworkVersion: "3"

plugins:
  - serverless-esbuild
  - serverless-offline

provider:
  name: aws
  runtime: nodejs18.x
  architecture: arm64
  stage: ${opt:stage}
  region: ${opt:region}
  deploymentBucket:
    name: serverless-deployment-bucket-${aws:accountId}
    serverSideEncryption: AES256
    blockPublicAccess: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - sqs:SendMessage
          Resource:
            - "Fn::Sub": "arn:aws:sqs:${aws:region}:*:*"
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource:
            - "Fn::Sub": "arn:aws:dynamodb:${aws:region}:*:*"

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    keepNames: true
  serverless-offline:
    noPrependStageInUrl: true
    resourceRoutes: true
    httpPort: 4000

functions:
  api:
    handler: handler.indexFunction
    events:
      - httpApi:
          path: /
          method: get

resources:
  Resources:
    Database:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: wire-middleware
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
